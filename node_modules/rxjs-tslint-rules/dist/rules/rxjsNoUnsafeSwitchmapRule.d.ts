import * as Lint from "tslint";
import * as ts from "typescript";
export declare class Rule extends Lint.Rules.TypedRule {
    static metadata: Lint.IRuleMetadata;
    static FAILURE_STRING: string;
    applyWithProgram(sourceFile: ts.SourceFile, program: ts.Program): Lint.RuleFailure[];
}
export declare class Walker extends Lint.ProgramAwareRuleWalker {
    static METHODS_REGEXP: RegExp;
    static DEFAULT_DISALLOW: string[];
    static DEFAULT_OBSERVABLE: string;
    private allowRegExp;
    private disallowRegExp;
    private observableRegExp;
    static createRegExp(value: any): RegExp | null;
    constructor(sourceFile: ts.SourceFile, rawOptions: Lint.IOptions, program: ts.Program);
    protected visitCallExpression(node: ts.CallExpression): void;
    private shouldDisallow;
    private walkPatchedOperators;
    private walkPatchedTypes;
    private walkPipedOperators;
    private walkPipedTypes;
}
